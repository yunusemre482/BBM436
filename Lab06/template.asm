DEFINE_OPEN_RS232 MACRO
LOCAL START,SKIP_OPEN_RS232
JMP SKIP_OPEN_RS232


;Messes with AX,DX,DI
OPEN_RS232 PROC NEAR
    JMP START
    BAUD_RATE_DIVISOR LABEL WORD
    DW 12     ;9600 baud rate
START:
    STI     ;Set interrupt flag != CLI
    MOV AH,AL
    MOV DX,3FBH
    MOV AL,80H
    OUT DX,AL
    MOV DL,AH
    ROL    DL,4
    AND DX,0EH
    MOV DI,OFFSET BAUD_RATE_DIVISOR
    ADD DI,DX
    MOV DX,3F9H
    MOV AL,CS:[DI]+1;
    OUT DX,AL
    MOV DX,3F8H
    MOV AL,CS:[DI]
    OUT DX,AL
    MOV DX,3FBH
    MOV AL,AH
    AND AL,1FH
    OUT DX,AL
    MOV DX,3F9H
    MOV AL,0
                
    BREAK enable).
                
    OUT DX,AL
    RET
OPEN_RS232 ENDP

SKIP_OPEN_RS232:
    DEFINE_OPEN_RS232 ENDM

DEFINE_RXCH_RS232 MACRO
LOCAL END_RXCH_RS232
LOCAL SKIP_RXCH_RS232
JMP SKIP_RXCH_RS232


RXCH_RS232 PROC NEAR
    MOV DX,3FDH
    IN AL,DX
    AND AL,1
    JZ END_RXCH_RS232    NUL char from serial port*!)
    MOV DX,3F8H            ;Data Read/Write REGISTER address.
    IN AL,DX            ;READ IT!
END_RXCH_RS232:
    RET
RXCH_RS232 ENDP

SKIP_RXCH_RS232:
    DEFINE_RXCH_RS232 ENDM

DEFINE_TXCH_RS232 MACRO
LOCAL SKIP_TXCH_RS232
LOCAL TXCH_RS232_2
JMP SKIP_TXCH_RS232

TXCH_RS232 PROC NEAR
    PUSH AX
    MOV DX,3FDH
TXCH_RS232_2:
    IN AL,DX
    TEST AL,20H
    JZ TXCH_RS232_2
    MOV DX,3F8H
    POP AX
    OUT DX,AL
    RET
TXCH_RS232 ENDP

SKIP_TXCH_RS232:
    DEFINE_TXCH_RS232 ENDM
